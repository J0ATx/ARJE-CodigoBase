LOGFILE="/var/log/tanos.log"
#!/bin/bash

function init() {
    # Monthly Full Backup Script
    SRC_DIR="/usr/bin"
    BACKUP_DIR="/Respaldos"
    DATE=$(date +"%Y-%m-%d")
    FULL_BACKUP="$BACKUP_DIR/full"

    mkdir -p "$FULL_BACKUP"
    echo "[$(date)] Created backup directory: $FULL_BACKUP" >> "$LOGFILE"

    # Full backup
    tar -czpf "$FULL_BACKUP/full-$DATE.tar.gz" "$SRC_DIR"
    echo "[$(date)] Full backup created: $FULL_BACKUP/full-$DATE.tar.gz" >> "$LOGFILE"

    # Rsync for quick sync (optional)
    rsync -a --delete "$SRC_DIR/" "$BACKUP_DIR/rsync-monthly-latest/"
    echo "[$(date)] Rsync sync completed: $SRC_DIR to $BACKUP_DIR/rsync-monthly-latest/" >> "$LOGFILE"

    # Remote backup settings
    REMOTE_USER="your_remote_user"
    REMOTE_HOST="your.remote.server"
    REMOTE_DIR="/remote/backup/path"

    # Send latest full backup to remote server
    scp "$FULL_BACKUP/full-$DATE.tar.gz" "$REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR/" 2>/dev/null
    echo "[$(date)] Sent full backup to remote: $REMOTE_HOST:$REMOTE_DIR/" >> "$LOGFILE"

    # Optionally, sync the latest rsync backup directory to remote
    rsync -az --delete "$BACKUP_DIR/rsync-monthly-latest/" "$REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR/rsync-monthly-latest/"
    echo "[$(date)] Rsync backup directory synced to remote: $REMOTE_HOST:$REMOTE_DIR/rsync-monthly-latest/" >> "$LOGFILE"

    # Delete all weekly (differential) backups after monthly backup
    DIFF_DIR="$BACKUP_DIR/differential"
    if [ -d "$DIFF_DIR" ]; then
    rm -rf "$DIFF_DIR"/*
    echo "[$(date)] Deleted all weekly (differential) backups in $DIFF_DIR" >> "$LOGFILE"
    fi
}

init "$@"

# Usar dump para la base de datos.